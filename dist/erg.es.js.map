{"version":3,"file":"erg.es.js","sources":["../src/erg.ts"],"sourcesContent":["const CLA = 0xE0;\r\n\r\nconst ERROR_CODES = {\r\n    0x6985: \"Operation denied by user\",\r\n    0x6A86: \"Incorrect P1 or P2\",\r\n    0x6A87: \"Bad APDU length\",\r\n    0x6D00: \"Instruction isn't supported\",\r\n    0x6E00: \"CLA is not supported\",\r\n    0xB000: \"Device is busy\",\r\n    0xB001: \"Wrong response length\",\r\n    0xB002: \"Bad session id\",\r\n    0xB003: \"Unknown subcommand\",\r\n    0xB0FF: \"Bad state (check order of calls and errors)\",\r\n    0xE001: \"Bad token ID\",\r\n    0xE002: \"Bad token value\",\r\n    0xE003: \"Bad context extension size\",\r\n    0xE004: \"Bad data input ID\",\r\n    0xE005: \"Bad box ID\",\r\n    0xE006: \"Bad token index\",\r\n    0xE007: \"Bad frame index\",\r\n    0xE008: \"Bad input count\",\r\n    0xE009: \"Bad output count\",\r\n    0xE00A: \"Too many tokens\",\r\n    0xE00B: \"Too many inputs\",\r\n    0xE00C: \"Too many data inputs\",\r\n    0xE00D: \"Too many input frames\",\r\n    0xE00E: \"Too many outputs\",\r\n    0xE00F: \"Hasher internal error\",\r\n    0xE010: \"Buffer internal error\",\r\n    0xE011: \"UInt64 overflow\",\r\n    0xE012: \"Bad Bip32 path\",\r\n    0xE013: \"Internal crypto engine error\",\r\n    0xE014: \"Not enough data\",\r\n    0xE015: \"Too much data\",\r\n    0xE016: \"Address generation failed\",\r\n    0xE017: \"Schnorr signing failed\",\r\n    0xE018: \"Bad frame signature\",\r\n    0xE101: \"Can't display Bip32 path\",\r\n    0xE102: \"Can't display address\",\r\n    0xFFFF: \"Stack overflow\"\r\n};\r\n\r\nconst COMMANDS = {\r\n    app_version: 0x01,\r\n    app_name: 0x02,\r\n    extented_pub_key: 0x10,\r\n    derive_address: 0x11,\r\n    attest_input: 0x20,\r\n    sign_tx: 0x21\r\n}\r\n\r\nclass DeviceError extends Error {\r\n    private _code: number;\r\n\r\n    constructor(code: number) {\r\n        const message = (ERROR_CODES as any)[code] || \"Unknown error\";\r\n        super(message);\r\n        this._code = code;\r\n    }\r\n}\r\n\r\nimport type Transport from '@ledgerhq/hw-transport-node-hid';\r\nimport HidTransport from '@ledgerhq/hw-transport-node-hid';\r\n\r\nexport default class ErgoLedgerApp {\r\n    private _transport: Transport;\r\n\r\n    constructor(transport: Transport) {\r\n        this._transport = transport;\r\n    }\r\n\r\n    public async command(code: number, p1: number, p2: number, data: any): Promise<Buffer> {\r\n        if (data.length > 255) {\r\n            throw new DeviceError(0xE015); // Too much data\r\n        }\r\n        let header = Buffer.alloc(5);\r\n        header.writeUInt8(CLA, 0);\r\n        header.writeUInt8(code, 1);\r\n        header.writeUInt8(p1, 2);\r\n        header.writeUInt8(p2, 3);\r\n        header.writeUInt8(data.length, 4);\r\n        const response = await this._transport.exchange(Buffer.concat([header, data]))\r\n        if (response.length < 2) {\r\n            throw new DeviceError(0xB001); // Wrong response length\r\n        }\r\n        const returnCode = response.readUInt16BE(response.length - 2);\r\n        if (returnCode != 0x9000) {\r\n            throw new DeviceError(returnCode); // Call error\r\n        }\r\n        return response.slice(0, response.length - 2);\r\n    }\r\n\r\n    public async data(code: number, p1: number, p2: number, data: any): Promise<Buffer[]> {\r\n        let responses: Buffer[] = []\r\n        for (let i = 0; i < Math.ceil(data.length / 255); i++) {\r\n            const chunk = data.slice(i * 255, Math.min((i + 1) * 255, data.length));\r\n            const response = await this.command(code, p1, p2, chunk)\r\n            responses.push(response)\r\n        }\r\n\r\n        return responses;\r\n    }\r\n\r\n    public async getAppVersion(): Promise<Buffer> {\r\n        return this.command(COMMANDS.app_version, 0x00, 0x00, Buffer.from([]))\r\n    }\r\n\r\n    public async getAppName(): Promise<string> {\r\n        return this.command(COMMANDS.app_name, 0x00, 0x00, Buffer.from([]))\r\n            .then(buff => buff.toString('ascii'))\r\n    }\r\n}\r\n\r\n// exports.CLA = CLA;\r\n// exports.Device = Device;\r\n// exports.DeviceError = DeviceError;\r\n// exports.COMMANDS = COMMANDS;\r\n// exports.ERROR_CODES = ERROR_CODES;"],"names":[],"mappings":"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"}