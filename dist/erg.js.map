{"version":3,"file":"erg.js","sources":["../src/erg.ts"],"sourcesContent":["const CLA = 0xE0;\r\n\r\nconst ERROR_CODES = {\r\n    0x6985: \"Operation denied by user\",\r\n    0x6A86: \"Incorrect P1 or P2\",\r\n    0x6A87: \"Bad APDU length\",\r\n    0x6D00: \"Instruction isn't supported\",\r\n    0x6E00: \"CLA is not supported\",\r\n    0xB000: \"Device is busy\",\r\n    0xB001: \"Wrong response length\",\r\n    0xB002: \"Bad session id\",\r\n    0xB003: \"Unknown subcommand\",\r\n    0xB0FF: \"Bad state (check order of calls and errors)\",\r\n    0xE001: \"Bad token ID\",\r\n    0xE002: \"Bad token value\",\r\n    0xE003: \"Bad context extension size\",\r\n    0xE004: \"Bad data input ID\",\r\n    0xE005: \"Bad box ID\",\r\n    0xE006: \"Bad token index\",\r\n    0xE007: \"Bad frame index\",\r\n    0xE008: \"Bad input count\",\r\n    0xE009: \"Bad output count\",\r\n    0xE00A: \"Too many tokens\",\r\n    0xE00B: \"Too many inputs\",\r\n    0xE00C: \"Too many data inputs\",\r\n    0xE00D: \"Too many input frames\",\r\n    0xE00E: \"Too many outputs\",\r\n    0xE00F: \"Hasher internal error\",\r\n    0xE010: \"Buffer internal error\",\r\n    0xE011: \"UInt64 overflow\",\r\n    0xE012: \"Bad Bip32 path\",\r\n    0xE013: \"Internal crypto engine error\",\r\n    0xE014: \"Not enough data\",\r\n    0xE015: \"Too much data\",\r\n    0xE016: \"Address generation failed\",\r\n    0xE017: \"Schnorr signing failed\",\r\n    0xE018: \"Bad frame signature\",\r\n    0xE101: \"Can't display Bip32 path\",\r\n    0xE102: \"Can't display address\",\r\n    0xFFFF: \"Stack overflow\"\r\n};\r\n\r\nconst COMMANDS = {\r\n    app_version: 0x01,\r\n    app_name: 0x02,\r\n    extented_pub_key: 0x10,\r\n    derive_address: 0x11,\r\n    attest_input: 0x20,\r\n    sign_tx: 0x21\r\n}\r\n\r\nclass DeviceError extends Error {\r\n    private _code: number;\r\n\r\n    constructor(code: number) {\r\n        const message = (ERROR_CODES as any)[code] || \"Unknown error\";\r\n        super(message);\r\n        this._code = code;\r\n    }\r\n}\r\n\r\nimport type Transport from '@ledgerhq/hw-transport-node-hid';\r\nimport HidTransport from '@ledgerhq/hw-transport-node-hid';\r\n\r\nexport default class ErgoLedgerApp {\r\n    private _transport: Transport;\r\n\r\n    constructor(transport: Transport) {\r\n        this._transport = transport;\r\n    }\r\n\r\n    public async command(code: number, p1: number, p2: number, data: any): Promise<Buffer> {\r\n        if (data.length > 255) {\r\n            throw new DeviceError(0xE015); // Too much data\r\n        }\r\n        let header = Buffer.alloc(5);\r\n        header.writeUInt8(CLA, 0);\r\n        header.writeUInt8(code, 1);\r\n        header.writeUInt8(p1, 2);\r\n        header.writeUInt8(p2, 3);\r\n        header.writeUInt8(data.length, 4);\r\n        const response = await this._transport.exchange(Buffer.concat([header, data]))\r\n        if (response.length < 2) {\r\n            throw new DeviceError(0xB001); // Wrong response length\r\n        }\r\n        const returnCode = response.readUInt16BE(response.length - 2);\r\n        if (returnCode != 0x9000) {\r\n            throw new DeviceError(returnCode); // Call error\r\n        }\r\n        return response.slice(0, response.length - 2);\r\n    }\r\n\r\n    public async data(code: number, p1: number, p2: number, data: any): Promise<Buffer[]> {\r\n        let responses: Buffer[] = []\r\n        for (let i = 0; i < Math.ceil(data.length / 255); i++) {\r\n            const chunk = data.slice(i * 255, Math.min((i + 1) * 255, data.length));\r\n            const response = await this.command(code, p1, p2, chunk)\r\n            responses.push(response)\r\n        }\r\n\r\n        return responses;\r\n    }\r\n\r\n    public async getAppVersion(): Promise<Buffer> {\r\n        return this.command(COMMANDS.app_version, 0x00, 0x00, Buffer.from([]))\r\n    }\r\n\r\n    public async getAppName(): Promise<string> {\r\n        return this.command(COMMANDS.app_name, 0x00, 0x00, Buffer.from([]))\r\n            .then(buff => buff.toString('ascii'))\r\n    }\r\n}\r\n\r\n// exports.CLA = CLA;\r\n// exports.Device = Device;\r\n// exports.DeviceError = DeviceError;\r\n// exports.COMMANDS = COMMANDS;\r\n// exports.ERROR_CODES = ERROR_CODES;"],"names":[],"mappings":"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"}